{
	"info": {
		"_postman_id": "b9260e55-0652-48b4-a785-b709df5560b5",
		"name": "reqres_API_Collections",
		"description": "## üë§ Author Info\n\n**Name:** Md. Md. Aminul Islam  \n**Email:** [aminulislam.khadgir@gmail.com](https://aminulislam.khadgir@gmail.com/)\n\nüôã‚Äç‚ôÇÔ∏è Connect with Me\n\nüîó [GitHub](https://github.com/aminulislamtutul)  \nüîó [LinkedIn](https://www.linkedin.com/in/aminulislamtutul)\n\nBase URL:\n\n```\nhttps://reqres.in\n\n ```\n\n## üìÇ Postman Environment Setup (Suggested Variables)\n\nThese variables should be configured in your **Postman environment** to allow dynamic and reusable requests.\n\n### üßæ Booking Data Variables\n\n| Variable Name | Description | Example Value |\n| --- | --- | --- |\n| `BaseURL` | Base Url in the Rest API |  |",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "46763324",
		"_collection_link": "https://gold-robot-3070368.postman.co/workspace/85fe5b2b-35f5-4c6e-8ec4-625f56db4d81/collection/46763324-b9260e55-0652-48b4-a785-b709df5560b5?action=share&source=collection_link&creator=46763324"
	},
	"item": [
		{
			"name": "Page_1",
			"item": [
				{
					"name": "Fetch a list of users with pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users?page=1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch a single user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/3",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"3"
							]
						},
						"description": "[https://reqres.in/users?page=1](https://reqres.in/users?page=1)"
					},
					"response": []
				},
				{
					"name": "Single User Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/20",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"20"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Aminul\",\r\n  \"job\": \"SQA Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/users",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Najmus\",\r\n  \"job\": \"MARN Stack Developer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/users/1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/1",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "Base URL:\n\n```\nhttps://reqres.in/users?page=1\n\n ```"
		},
		{
			"name": "Page_2",
			"item": [
				{
					"name": "Fetch a list of users with pagination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users?page=2",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Fetch a single user by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/7",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single User Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/20",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"20"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Aminul\",\r\n  \"job\": \"SQA Engineer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/users",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an existing user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Najmus\",\r\n  \"job\": \"MARN Stack Developer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}/api/users/8",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "x-api-key",
								"value": "reqres-free-v1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BaseURL}}/api/users/7",
							"host": [
								"{{BaseURL}}"
							],
							"path": [
								"api",
								"users",
								"7"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}